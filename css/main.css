/* COMMON */
body {
  color: #333;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4;
  font-family: 'Nanum Gothic', sans-serif;
  height: 3000px;
}

img {
  display: block;

}

a {
  text-decoration: none;
}

.inner {
  /* 가운데 정렬을 하는 inner클래스 */
  width: 1100px;
  margin: 0 auto;
  position: relative;
}

/* 공통적인 버튼 클래스 */
/* 우선순위 점수 10점 */
.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  /* 혹시라도 a나 span태그에도 버튼을 적용했을때도 영향을 끼치기 위해 */
  display: block;
  transition: .4s;
}

.btn:hover {
  background-color: #333;
  color: #fff;
}

/* 여러가지 종류의 버튼 */
/* hover를 안해도 반전된 경우는 이미 색상적용 */
/* 우선순위 점수 20점, 클래스 선택자 2개 , 기존 버튼을 덮어쓸 수 있음*/
.btn.btn--reverse {
  background-color: #333;
  color: #fff;
}

/* 우선순위 점수 30점 */
.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333;
}

.btn.btn--brown {
  color: #592B18;
  border-color: #592B18;
}

.btn.btn--brown:hover {
  color: #fff;
  background-color: #592B18;
}

.btn.btn--gold {
  background-color: #D9AA8A;
  border-color: #D9AA8A;
}

.btn.btn--gold:hover {
  color: #fff;
  background-color: #D9AA8A;
}

.btn.btn--white {
  background-color: #fff;
  border-color: #fff;
}

.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}


/* HEADER */
header {
  width: 100%;
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed;
  top: 0;
  /* 앞으로 만들 다른 섹션보다 더 위에 있을 것이다는 의미 */
  z-index: 1;
}

header>.inner {
  height: 120px;
}

header .logo {
  height: 75px;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}

header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;

}

header .sub-menu ul.menu {
  font-family: Arial, sans-serif;
  display: flex;
}

header .sub-menu ul.menu li {
  position: relative;
}

/* 요소 사이에 있는 가운데 선 : 가상요소 선택자 활용 */
header .sub-menu ul.menu li::before {
  content: "";
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}

/* 가상 클래스 선택자 활용 */
header .sub-menu ul.menu li:first-child:before {
  display: none;
}

header .sub-menu ul.menu li a {
  font-size: 12px;
  padding: 11px 16px;
  display: block;
  color: #656565;
}

header .sub-menu ul.menu li a:hover {
  color: #000;
}

header .sub-menu .search {
  height: 34px;
  position: relative;
}

header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 1px 10px;
  border: 4px solid #ccc;
  border-radius: 5px;
  outline: none;
  border-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width .4s;
}

header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}

header .sub-menu .search .material-icons {
  height: 24px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: .4s;
}

/* .search.focused 일치선택자 */
header .sub-menu .search.focused .material-icons {
  opacity: 0;
}

header .main-menu {
  /* 각 메뉴들이 수평이 되게 만들어줌 */
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  display: flex;
}

header .main-menu .item {}

header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

/* 아이템 부분에 마우스 올렸을때 hover효과를 넣을 건데,
.item__name뒤에만 :hover를 붙이면 안된다
왜냐하면 이름부분의 모양이 바뀌는것도 맞지만,
 아이템 컨텐츠 부분에도 영향이 가서 화면에 나와야 하기 떼문이다 
 그래서 .item부분 자체에 적용한다 */
header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}

header .main-menu .item .item__name {}

header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  left: 0;
  display: none;
}

header .main-menu .item:hover .item__contents {
  display: block;
}

header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
  height: 200px;
}

/* 자식 선택자를 사용한 이유?  .contents__menu안에 ul태그가 2개가 있어서 자식선택자로 명시하지 않으면
하위 선택자가 되고, 결국 하위 선택자를 통해 컨텐츠 메뉴안에 들어가 있는 모든 내용에 영향이 끼쳐서
바로 자식에 해당하는 ul태그로 사용했다. */
header .main-menu .item .item__contents .contents__menu>ul {
  /* 수평으로 정렬 */
  display: flex;
  padding: 20px 0;
}

header .main-menu .item .item__contents .contents__menu>ul>li {
  width: 220px;
}

header .main-menu .item .item__contents .contents__menu>ul>li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}

header .main-menu .item .item__contents .contents__menu>ul>li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  /* 마우스 커서를 갖다대면 화살표모양에서 손가락모양으로 변함 */
  cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu>ul>li ul li:hover {
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url("../images/main_menu_pattern.jpg");
}

header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
}

header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}

header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}

header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, .15);
  cursor: pointer;
}

/* VISUAL */
.visual {
  /* 헤더의 높이 값 - 헤더의 inner부분의 높이가 120px인데,
  헤더 자체는 높이가 없어서 auto인데, 최대한 줄어들으려고 한다.
  inner의 높이로 인해 그 이하보다 더 줄어들을 순 없습니다 */
  margin-top: 120px;
  background-image: url(../images/visual_bg.jpg);
  background-position: center;
}

.visual .inner {
  height: 646px;
}

.visual .title {
  position: absolute;
  top: 88px;
  left: -10px;

}

.visual .title .btn {
  /* 구조상의 부모요소로 잘 배치가 되겠구나 */
  position: absolute;
  top: 259px;
  left: 173px;
}

.visual .cup1.image {
  position: absolute;
  bottom: 0;
  right: -47px;

}

.visual .cup1.text {
  position: absolute;
  top: 38px;
  right: 171px;
}

.visual .cup2.image {
  position: absolute;
  bottom: 0;
  right: 162px;
}

.visual .cup2.text {
  position: absolute;
  bottom: 321px;
  right: 416px;
}

.visual .spoon {
  position: absolute;
  bottom: 0;
  right: 275px;
}

/* 일단 완벽하게 투명해서 화면에서 안보이게 미리 만들어놓고
자바스크립트로 순차적으로 나타나게 할 것이다. */
.visual .fade-in {
  opacity: 0;
}

/* NOTICE */
.notice .notice-line {
  position: relative;
}

.notice .notice-line .bg-left {
  width: 50%;
  height: 100%;
  background-color: #333;
  position: absolute;
  top: 0;
  left: 0;
}

.notice .notice-line .bg-right {
  width: 50%;
  height: 100%;
  background-color: #f6f5ef;
  position: absolute;
  top: 0;
  right: 0;
}

.notice .notice-line .inner {
  height: 62px;
  z-index: 1;
  display: flex;
}

.notice .notice-line .inner__left {
  width: 60%;
  height: 100%;
  background-color: #333;
  display: flex;
  align-items: center;
}

.notice .notice-line .inner__left h2 {
  color: #fff;
  font-size: 17px;
  font-weight: 700;
  margin-right: 20px;
}

.notice .notice-line .inner__left .swiper-container {
  height: 62px;
  flex-grow: 1;
}
.notice .notice-line .inner__left .swiper-slide {
  height: 62px;
  display: flex;
  align-items: center;
}
.notice .notice-line .inner__left .swiper-slide a {
  color: #fff;
}

.notice .notice-line .inner__left .notice-line__more {
  width: 62px;
  height: 62px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.notice .notice-line .inner__left .notice-line__more .material-icons {
  color: #fff;
  /* 아이콘의 기본크기는 24pz */
  font-size: 30px;
}

.notice .notice-line .inner__right {
  width: 40%;
  height: 100%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}
.notice .notice-line .inner__right h2 {
  font-size: 17px;
  font-weight: 700;
}
.notice .notice-line .inner__right .toggle-promotion {
  width: 62px;
  height: 62px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}
.notice .notice-line .inner__right .toggle-promotion .material-icons {
  font-size: 30px;
}

.notice .promotion {
  height: 693px;
  background-color: #f6f5ef;
}
.notice .promotion .swiper-container{
  width: 2477px;
}